{"version":3,"sources":["Components/Landing/Landing.jsx","Components/Dashboard/Dashboard.jsx","Components/Chat/Chat.jsx","Components/Register/Register.jsx","App.js","index.js"],"names":["Landing","props","onSubmit","e","preventDefault","console","log","match","path","history","push","to","Dashboard","Chat","socket","io","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","idToCall","setIdToCall","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","playsInline","ref","autoPlay","muted","width","height","placeholder","value","onChange","target","onClick","destroy","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","callUser","Register","replace","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfb45c49.chunk.js","sourcesContent":["// import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\n// import { io } from 'socket.io-client';\n\nfunction Landing(props) {\n\n    // const [info, setInfo] =useState('')\n    \n    // const socket = io('http://localhost:8080')\n    // socket.on('connect', ()=>{\n    //     console.log(socket.id)\n    //     socket.emit('custom-event', 10,'testing');\n    // })\n\n    let onSubmit = (e)=>{\n        e.preventDefault();\n        console.log(e);\n        console.log(props.match.path)\n        props.history.push(\"dashboard\");\n    }\n\n    return (\n        <>\n        <h1>Convunity Landing Page</h1>\n        <form onSubmit={onSubmit}>\n            <h2>Sign-In</h2>\n            <label>Username</label>\n            <input></input>\n            <label>Password</label>\n            <input></input>\n            <button>Sign-In</button>\n        </form>\n        <Link to='/register'><div>Register</div></Link>\n        </>\n    );\n}\n\nexport default Landing;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Dashboard(props) {\n\n    return (\n        <div>\n            <h1>Welcome User</h1>\n            <Link to='/chat'><div>Lobby</div></Link>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, {useEffect, useState, useRef} from 'react';\nimport {Link} from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport  Peer  from 'simple-peer';\n\nfunction Chat(props) {\n\n    const socket = io('https://convunity.herokuapp.com');\n\n    const [stream, setStream] = useState(null);\n    const [me, setMe] = useState('');\n    const [call, setCall] = useState({});\n    const [callAccepted, setCallAccepted] =useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [name, setName] = useState('');\n    const [idToCall, setIdToCall] = useState('');\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(()=>{\n        const socket = io('https://convunity.herokuapp.com');\n        navigator.mediaDevices.getUserMedia({video:true, audio:true})\n            .then((currentStream)=>{\n                setStream(currentStream)\n\n                myVideo.current.srcObject = currentStream;\n            });\n        \n        socket.on('me', (id)=>{\n            setMe(id)\n        });\n        socket.on('calluser', ({ from, name: callerName, signal })=>{\n            setCall({isReceivedCall: true, from, name: callerName, signal})\n        });\n    }, []);\n\n    const answerCall = ()=>{\n        setCallAccepted(true);\n\n        const peer = new Peer({initiator:false, trickle:false, stream});\n\n        peer.on('signal', (data)=>{\n            socket.emit('answercall', {signal:data, to:call.from});\n        });\n\n        peer.on('stream', (currentStream)=>{\n            userVideo.current.srcObject = currentStream;\n        })\n\n        peer.signal(call.signal);\n\n        connectionRef.current = peer;\n    }\n\n    const callUser = (id)=>{\n        const peer = new Peer({initiator:true, trickle:false, stream});\n\n        peer.on('signal', (data)=>{\n            socket.emit('calluser', {userToCall: id, signalData: data, from: me, name});\n        });\n\n        peer.on('stream', (currentStream)=>{\n            userVideo.current.srcObject = currentStream;\n        })\n\n        socket.on('callaccepted', (signal)=>{\n            setCallAccepted(true);\n\n            peer.signal(signal);\n        })\n\n        connectionRef.current = peer;\n    }\n\n    const leaveCall = () =>{\n        setCallEnded(true);\n        connectionRef.current.destroy();\n\n\n    }\n    console.log(me);\n    return (\n        <>\n            <h1>Video Chat</h1>\n            <h2>Hello {name || 'User'}</h2>\n            <div>\n                {\n                    stream && (\n                        <video playsInline ref={myVideo} autoPlay muted width=\"250\" height=\"250\">\n                        </video>\n                    )\n                }\n                {\n                    callAccepted && !callEnded && (\n                        <>\n                        <h3>Hi! {call.name || 'User'}</h3>\n                        <video playsInline ref={userVideo} autoPlay width=\"250\" height=\"250\">\n                        </video>\n                        </>\n                    )\n                }\n                <section>\n                    {/* <form> */}\n                        <label>Account Info</label>\n                        <input placeholder=\"name\" value={name} onChange={(e)=>setName(e.target.value)}></input>\n                        <label>Make a Call</label>\n                        <input placeholder =\"Id to Call\" value={idToCall} onChange={(e)=>setIdToCall(e.target.value)}></input>\n                        {\n                            callAccepted && !callEnded ? (\n                                \n                                <button onClick={leaveCall}>Hang Up</button>\n                                \n                            ):(\n                                <button onClick={()=>{callUser(idToCall)}}>Call</button>\n                            )\n                        }\n                    {/* </form> */}\n                </section>\n                <>\n                    {call.isReceivedCall && !callAccepted && (\n                        <div>\n                            <p>{call.name} is calling:</p>\n                            <button onClick={answerCall}>Answer Call</button>\n                        </div>\n                    )\n                    \n                    }\n                </>\n            </div>\n            <Link to='/dashboard'><div>End Call</div></Link>\n        </>\n    );\n}\n\nexport default Chat;","import React from 'react';\n\nfunction Register(props) {\n    let onSubmit = (e)=>{\n        e.preventDefault();\n        console.log(e);\n        console.log(props.match.path)\n        props.history.replace('');\n    }\n    return (\n        <div>\n            <h1>Thank you for joining Convunity</h1>\n            <p>Please provide the following information</p>\n            <form onSubmit={onSubmit}>\n                <label>Name</label>\n                <input></input>\n                <label>Username</label>\n                <input></input>\n                <label>Email</label>\n                <input></input>\n                <label>Nickname</label>\n                <input></input>\n                <label>Native Language</label>\n                <input></input>\n                <label>Learning Language</label>\n                <input></input>\n                <button>Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Register;","import {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Landing from './Components/Landing/Landing';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Chat from './Components/Chat/Chat';\nimport Register from './Components/Register/Register';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact component={Landing}/>\n        <Route path='/register' component ={Register}/>\n        <Route path='/dashboard' component={Dashboard}/>\n        <Route path='/chat' component={Chat} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}